<?phpclass UsersController extends AppController {	var $name = 'Users';        var $components = array('Captcha', 'Excel');                var $paginate = array(            'limit' => 100,            'order' => array(                'User.name' => 'asc'            )        );        	function index() {		$this->set('content_title', 'Usuários');                //verifica se é um administrador, senão redireciona                if($this->Auth->user('group_id') != 1){			$this->redirect('/users/view_data');		}                                 $condition = array();                $param_filtro = array();                $param_get = '?';                if(!empty($_GET)){			$param_filtro = $_GET;                                                if (!empty($_GET['busca'])) {                                $_GET['busca'] = str_replace(' ', '%', $_GET['busca']);                                $condition['OR'] = array(                                        array('User.name LIKE ' => '%'.$_GET['busca'].'%'),                                        array('User.email LIKE ' => '%'.$_GET['busca'].'%')                                );			}                        if (!empty($_GET['recebe_noticia'])) {				$condition['User.recebe_noticia'] = 1;			}                        if (!empty($_GET['tipo_user'])) {				$condition['User.group_id'] = intval($_GET['tipo_user']);			}                                                foreach($_GET as $key => $value)                            if($key != 'url')                            $param_get .= $key.'='.$value.'&';                        ;                }                		$this->User->recursive = 1;                $this->set('param_get', $param_get);                $this->set('param_filtro', $param_filtro);		$this->set('users', $this->paginate('User', $condition));	}        function associar_cliente_pedido(){            $this->set('content_title', 'Associar usuário ao pedido');            $users = array();            $condition = array();            if (!empty($this->data['User']['busca'])) {                $condition['OR'] = array(                    array('User.name LIKE ' => '%'.$this->data['User']['busca'].'%'),                    array('User.cpf LIKE ' => '%'.$this->data['User']['busca'].'%'),                    array('User.email LIKE ' => '%'.$this->data['User']['busca'].'%'),                    array('User.id LIKE ' => '%'.$this->data['User']['busca'].'%')                );                $condition['User.group_id'] = 2;                $this->set('busca', $this->data['User']['busca']);                $users = $this->User->find('all', array('conditions' => $condition, 'recursive' => '-1'));            }else{                $condition['User.group_id'] = 2;                $this->set('busca', '');                $users = $this->User->find('all', array('conditions' => $condition, 'recursive' => '-1', 'limit' => 100));            }            $this->set('users', $users);        }        function index_root() {		$this->set('content_title', 'Usuários');                //verifica se é um administrador, senão redireciona                if($this->Auth->user('group_id') != 1){			$this->redirect('/users/view_data');		} 		$this->User->recursive = 1;		$this->set('users', $this->paginate());	}	function view($id = null) {		//verifica se é Cliente, para redirecionar para a página certa		if($this->Auth->user('group_id') != 1){			$this->redirect('/users/view_data');		} 			$this->set('content_title', 'Dados do usuário');		if (!$id) {			$this->Session->setFlash(__('Invalid user', true));			$this->redirect(array('action' => 'index'));		}		$user = $this->User->read(null, $id);		$estado = $this->User->Cidade->Estado->read(null, $user['Cidade']['estado_id']);		$pedidos = $this->User->Pedido->find('all', array('conditions' => array('Pedido.user_id' => $id), 												'recursive' => '1'));		$this->set('user', $user);		$this->set('pedidos', $pedidos);		$this->set('estado', $estado);	}	function view_data() {		$this->set('content_title', 'Dados pessoais');		$user_id = $this->Auth->user('id');		$user = $this->User->find('first', array('conditions' => array('User.id' => $user_id), 'recursive' => 1 ));		$this->set('user', $user);	}        function add(){		$this->set('content_title', 'Cadastro de usuário');		if (!empty($this->data)) {                        if(!empty($this->data['User']['password'])){                            $this->data['User']['password2'] = $this->Auth->password($this->data['User']['password2']);	                            $this->data['User']['password'] = $this->Auth->password($this->data['User']['password']);	                        }			$this->data['User']['username'] = $this->data['User']['email'];				$this->User->create();			if ($this->User->save($this->data)) {				//enviar e-mail para o cliente sobre a criação da conta.				$array_mesclagem = array();				$array_mesclagem['nome'] = $this->data['User']['name'];				$this->envia_email($this->data['User']['name'], $this->data['User']['username'], 'Criação de conta' ,'criacao_conta', $array_mesclagem);				$this->Session->setFlash(__('Cadastro realizado com sucesso. Faça o login.', true));				$this->redirect('/users');			} else {				$this->Session->setFlash(__('Houve um erro ao fazer o cadastro, verifique os dados informados', true));			}		}		$groups = $this->User->Group->find('list');                $select_estados = $this->User->Cidade->Estado->getFormSelect();                if(!empty($this->data['User']['estado_id'])){                    $select_cidades = $this->User->Cidade->getFormSelect($this->data['User']['estado_id']);                    $estado_id = $this->data['User']['estado_id'];                }else{                    $select_cidades = $this->User->Cidade->getFormSelect(0);                    $estado_id = null;                }                if(!empty($this->data['User']['cidade_id']))                    $cidade_id = $this->data['User']['cidade_id'];                else                    $cidade_id = null;		$this->set(compact('groups', 'select_cidades', 'select_estados', 'cidade_id', 'estado_id'));	}        function cadastro_rapido(){		$this->set('content_title', 'Cadastro de usuário');		if (!empty($this->data)) {                        $this->data['User']['password2'] = $this->Auth->password('temp'.date('md'));	                        $this->data['User']['password'] = $this->Auth->password('temp'.date('md'));				$this->data['User']['username'] = $this->data['User']['email'];				$this->User->create();			if ($this->User->save($this->data)) {				//enviar e-mail para o cliente sobre a criação da conta.				$array_mesclagem = array();				$array_mesclagem['nome'] = $this->data['User']['name'];				$this->envia_email($this->data['User']['name'], $this->data['User']['username'], 'Criação de conta' ,'criacao_conta', $array_mesclagem);				$this->Session->setFlash(__('Cadastro realizado com sucesso. Faça o login.', true));				$this->redirect('/users');			} else {				$this->Session->setFlash(__('Houve um erro ao fazer o cadastro, verifique os dados informados', true));			}		}		$groups = $this->User->Group->find('list');                $select_estados = $this->User->Cidade->Estado->getFormSelect();                if(!empty($this->data['User']['estado_id'])){                    $select_cidades = $this->User->Cidade->getFormSelect($this->data['User']['estado_id']);                    $estado_id = $this->data['User']['estado_id'];                }else{                    $select_cidades = $this->User->Cidade->getFormSelect(0);                    $estado_id = null;                }                if(!empty($this->data['User']['cidade_id']))                    $cidade_id = $this->data['User']['cidade_id'];                else                    $cidade_id = null;		$this->set(compact('groups', 'select_cidades', 'select_estados', 'cidade_id', 'estado_id'));	}	function cadastro_cliente(){		$this->set('content_title', 'Cadastro de cliente');		if (!empty($this->data)) {                        if(!empty($this->data['User']['password'])){                            $this->data['User']['password2'] = $this->Auth->password($this->data['User']['password2']);	                            $this->data['User']['password'] = $this->Auth->password($this->data['User']['password']);	                        }			$this->data['User']['username'] = $this->data['User']['email'];	                        $this->data['User']['group_id'] = 2;                        if(empty($this->data['User']['recebe_noticia']))                            $this->data['User']['recebe_noticia'] = 0;                        else                            $this->data['User']['recebe_noticia'] = 1;			$this->User->create();                        //verifica se o e-mail já esta cadastrado                        $user = $this->User->find('first', array('conditions' => array('email' => $this->data['User']['email'])));                        //$this->debugVar($user);                        if(!$user){                            if($this->data['User']['ver_code']==$this->Session->read('ver_code'))	{ //comparing both codes                                    if ($this->User->save($this->data)) {                                            //enviar e-mail para o cliente sobre a criação da conta.                                            $array_mesclagem = array();                                            $array_mesclagem['nome'] = $this->data['User']['name'];                                            $this->envia_email($this->data['User']['name'], $this->data['User']['username'], 'Criação de conta' ,'criacao_conta', $array_mesclagem);                                            $this->Session->setFlash(__('Cadastro realizado com sucesso. Faça o login.', true));                                            $this->redirect('/users/login');                                    } else {                                            $this->Session->setFlash(__('Houve um erro ao fazer o cadastro, verifique os dados informados', true));                                    }                            }else{                                //erro do captcha, preencher novamente                                $this->Session->setFlash(__('Código de verificação incorreto, preencha novamente.', true));                            }                        }else{                            $this->Session->setFlash(__('E-mail já cadastrado, tente fazer o login.', true));                        }		}		$groups = $this->User->Group->find('list');                $select_estados = $this->User->Cidade->Estado->getFormSelect();                if(!empty($this->data['User']['estado_id'])){                    $select_cidades = $this->User->Cidade->getFormSelect($this->data['User']['estado_id']);                    $estado_id = $this->data['User']['estado_id'];                }else{                    $select_cidades = $this->User->Cidade->getFormSelect(0);                    $estado_id = null;                }                if(!empty($this->data['User']['cidade_id']))                    $cidade_id = $this->data['User']['cidade_id'];                else                    $cidade_id = null;                $this->create_captcha();		$this->set(compact('groups', 'select_cidades', 'select_estados', 'cidade_id', 'estado_id'));	}        function remember(){            if (!empty($this->data)) {                $email = $this->data['User']['email'];                $user = $this->User->find('first', array('conditions' => array('User.email' => $email)));                $codigo = $this->codificar($user['User']['email']);                if($user){                    //envia e-mal para usuário com o link para mudar a senha                    $array_mesclagem = array();                    $array_mesclagem['nome'] = $user['User']['name'];                    $array_mesclagem['email'] = $user['User']['email'];                    $array_mesclagem['link_remember'] = $this->config_sistema['Configuracao']['site_url'].'/users/change_password_code?code='.$codigo;                    if($this->envia_email($user['User']['name'], $user['User']['email'], 'Mudar senha' ,'mudar_senha', $array_mesclagem))                        $this->Session->setFlash(__('E-mail enviado', true));                    else                        $this->Session->setFlash(__('Falha ao enviar o e-mail, tente novamente mais tarde', true));                }else{                    //usuário não cadastrado                    $this->Session->setFlash(__('E-mail não cadastrado no sistema.', true));                }            }            //$this->set('link', $this->config_sistema['Configuracao']['site_url'].'/users/change_password_code?code='.$codigo);        }        function change_password($id = null) {		$this->set('content_title', 'Mudar Senha');		if (!$id && empty($this->data)) {			$this->Session->setFlash(__('Usuário inválido', true));			$this->redirect('/users/view_data');		}                //verifica se o usuário é cliente                if($this->Auth->user('group_id') == 2){                    //verifica se são os dados dele mesmo para poder editar                    if($this->Auth->user('id') != $id){                        $this->redirect('/users/view_data');                    }                    $this->data['User']['id'] = $this->Auth->user('id');                }		if (!empty($this->data)) {			//verificar senha			if(isset($this->data['User']['password2'])) {				if($this->data['User']['password2'] == '' || $this->data['User']['password'] == ''){					$this->Session->setFlash(__('Senha não pode ser vazia!', true));				}else{                                    $this->data['User']['password2'] = $this->Auth->password($this->data['User']['password2']);                                    $this->data['User']['password'] = $this->Auth->password($this->data['User']['password']);                                    $this->User->create();                                    if ($this->User->save($this->data)) {                                            $this->Session->setFlash(__('Senha alterada.', true));                                            $this->redirect('/users/view_data');                                    } else {                                            $this->Session->setFlash(__('Erro ao salvar, verifique se as senhas estão iguais.', true));                                    }	                                }			} else {				$this->Session->setFlash(__('As senhas precisam ser iguais para confirmar a mudança.', true));				$this->data = $this->User->read(null, $this->data['User']['id']);				$groups = $this->User->Group->find('list');				$this->set(compact('groups'));			}		}		if (empty($this->data)) {			$this->data = $this->User->read(null, $id);		}		$groups = $this->User->Group->find('list');		$this->set(compact('groups'));	}        function change_password_code() {		$this->set('content_title', 'Mudar Senha');                if (!empty($this->data)) {                    //mudar senha                    if($this->data['User']['password2'] == '' || $this->data['User']['password'] == ''){                            $this->Session->setFlash(__('Senha não pode ser vazia!', true));                    }else{                        $this->data['User']['password2'] = $this->Auth->password($this->data['User']['password2']);                        $this->data['User']['password'] = $this->Auth->password($this->data['User']['password']);                        $this->User->create();                        if ($this->User->save($this->data)) {                                $this->Session->setFlash(__('Senha alterada.', true));                                $this->redirect('/users/login');                        } else {                                $this->Session->setFlash(__('Erro ao salvar, verifique se as senhas estão iguais.', true));                        }                    }                    $_GET['code'] = $this->codificar($this->data['User']['email']);                }                //carregar página para mudança de senha                if(empty($_GET['code'])){                    $this->redirect('/pages/home');                }                $email = $this->descodificar($_GET['code']);                $user = $this->User->find('first', array('conditions' => array('User.email' => $email)));                if($user){                    $this->set('user', $user);                }else{                    $this->Session->setFlash(__('Link inválido.', true));                    $this->redirect('/pages/home');                }	}	function contato(){		if (!empty($this->data)) {			//prepara array de mesclagem			$array_mesclagem = array();			$array_mesclagem['nome'] = $this->data['User']['nome'];			$array_mesclagem['email'] = $this->data['User']['email'];			$array_mesclagem['telefone'] = $this->data['User']['telefone'];			$array_mesclagem['mensagem'] = nl2br($this->data['User']['mensagem']);			if($this->data['User']['ver_code']==$this->Session->read('ver_code')){								if ($this->envia_email($this->config_sistema['Configuracao']['nome_empresa'], $this->config_sistema['Configuracao']['email'], 'Contato do site: '.date('d-m-Y H:i:s') ,'contato', $array_mesclagem)) {					$this->Session->setFlash('E-mail enviado. Obrigado pelo contato');					//envio para o grupodf									} else {					$this->Session->setFlash('Falha no envio, verifique se os campos foram preenchidos');				}							}else{				$this->Session->setFlash('Código de verificação incorreto.');			}		}				$this->redirect('/pages/contato');	}	function contato_tecnico(){		if (!empty($this->data)) {			//prepara array de mesclagem			$array_mesclagem = array();			$array_mesclagem['nome'] = $this->data['User']['nome'];			$array_mesclagem['email'] = $this->data['User']['email'];			$array_mesclagem['telefone'] = $this->data['User']['telefone'];			$array_mesclagem['mensagem'] = nl2br($this->data['User']['mensagem']);			if ($this->envia_email($this->config_sistema['Configuracao']['nome_empresa'], 'contato@grupodf.com', 'Contato técnico do site' ,'contato', $array_mesclagem)) {				$this->Session->setFlash('E-mail enviado. Obrigado pelo contato');			} else {				$this->Session->setFlash('Falha no envio, verifique se os campos foram preenchidos');			}		}		$this->redirect('/pages/contato');	}	function edit($id = null) {                $this->set('content_title', 'Editar dados');		if (!$id && empty($this->data)) {			$this->Session->setFlash(__('Invalid user', true));			$this->redirect(array('action' => 'index'));		}                //verifica se o usuário é cliente                if($this->Auth->user('group_id') == 2){                    //verifica se são os dados dele mesmo para poder editar                    if($this->Auth->user('id') != $id){                        $this->redirect('/users/edit_data');                    }                }		if (!empty($this->data)) {			if ($this->User->save($this->data)) {				$this->Session->setFlash(__('Dados salvos', true));				$this->redirect('/users/index');			} else {				$this->Session->setFlash(__('Dados não podem ser salvos, tente novamente', true));			}		}		if (empty($this->data)) {			$this->data = $this->User->read(null, $id);		}		$select_estados = $this->User->Cidade->Estado->getFormSelect();                $select_cidades = $this->User->Cidade->getFormSelect($this->data['Cidade']['estado_id']);                $this->set(compact('select_cidades', 'users', 'select_estados'));	}        function edit_data() {                $this->set('content_title', 'Editar dados');                $id = $this->Auth->user('id');		if (!empty($this->data)) {                    $this->data['User']['id'] = $id;                    if(empty($this->data['User']['recebe_noticia']))                        $this->data['User']['recebe_noticia'] = 0;                    else                        $this->data['User']['recebe_noticia'] = 1;                    if ($this->User->save($this->data)) {                        $this->Session->setFlash(__('Dados salvos', true));                        $this->redirect('/users/view_data');                    } else {                        $this->Session->setFlash(__('Dados não podem ser salvos, tente novamente', true));                    }		}		if (empty($this->data)) {			$this->data = $this->User->read(null, $id);		}		$select_estados = $this->User->Cidade->Estado->getFormSelect();                $select_cidades = $this->User->Cidade->getFormSelect($this->data['Cidade']['estado_id']);                $this->set(compact('select_cidades', 'users', 'select_estados'));	}	function delete($id = null) {		if (!$id) {			$this->Session->setFlash(__('Invalid id for user', true));			$this->redirect(array('action'=>'index'));		}		if ($this->User->delete($id)) {			$this->Session->setFlash(__('User deleted', true));			$this->redirect(array('action'=>'index'));		}		$this->Session->setFlash(__('User was not deleted', true));		$this->redirect(array('action' => 'index'));	}	function login() {            $this->set('content_title', 'Login');            if ($this->Session->read('Auth.User')) {                    //$this->Session->setFlash('Você esta logado!');                    if ($this->Session->check('Redirect.url')) {                            $url_retorno = $this->Session->read('Redirect.url');                            $this->Session->delete('Redirect.url');                            $this->redirect($url_retorno);                    }                    //verificar se é admin, para limpar o pedido criado                    //pois este não pode fazer pedidos para si mesmo.            }	}       	function logout() {		$this->Session->setFlash('');		$this->Session->destroy();		$this->redirect($this->Auth->logout());	}        function create_captcha()	{            //App::import("Component","Captcha"); //including captcha class            $this->Captcha =  new CaptchaComponent(); //creating an object instance            $this->Captcha->controller = & $this; //assign this conroller(CaptchaController) object to its captcha object's controller property.            $this->set('captcha_src',$captcha_src=$this->Captcha->create()); //create a capthca and assign to a variable	}		function beforeFilter() {		parent::beforeFilter(); 		$this->Auth->allow(array('build_acl', 'cadastro_cliente', 'contato', 'login', 'logout', 'remember', 'change_password_code'));		$this->set('nameSession', 'manage');		$this->set('controller_name', 'home');                $this->Session->write('SideBar.tipo', 'produtos');	}	function initDB() {		$group =& $this->User->Group;		//Allow Administrador		$group->id = 1;     		$this->Acl->allow($group, 'controllers');		//allow Funcionário		$group->id = 2;		$this->Acl->deny($group, 'controllers');                //acesso aos métodos		$this->Acl->allow($group, 'controllers/Fotos/view');                $this->Acl->allow($group, 'controllers/Fotogalerias/view');                $this->Acl->allow($group, 'controllers/Fotogalerias/filtro');                $this->Acl->allow($group, 'controllers/Fotogalerias/filtro_categoria');                $this->Acl->allow($group, 'controllers/Fotogalerias/filtro_form');                $this->Acl->allow($group, 'controllers/Fotogalerias/filtro_subcategoria');                $this->Acl->allow($group, 'controllers/Users/view_data');                $this->Acl->allow($group, 'controllers/Users/edit_data');                $this->Acl->allow($group, 'controllers/Users/change_password');                $this->Acl->allow($group, 'controllers/Produtos/index');                $this->Acl->allow($group, 'controllers/Produtos/buscar');                $this->Acl->allow($group, 'controllers/Produtos/filtro');                $this->Acl->allow($group, 'controllers/Produtos/filtro_categoria');                $this->Acl->allow($group, 'controllers/Produtos/filtro_form');                $this->Acl->allow($group, 'controllers/Produtos/filtro_subcategoria');                $this->Acl->allow($group, 'controllers/Produtos/listar_por_categoria');                $this->Acl->allow($group, 'controllers/Produtos/listar_promocao');                $this->Acl->allow($group, 'controllers/Produtos/listar_todos');                $this->Acl->allow($group, 'controllers/Produtos/view');                $this->Acl->allow($group, 'controllers/Pedidos/index');                $this->Acl->allow($group, 'controllers/Pedidos/view');                $this->Acl->allow($group, 'controllers/Pedidos/atual');                $this->Acl->allow($group, 'controllers/Pedidos/calcular_frete');                $this->Acl->allow($group, 'controllers/Pedidos/fazer_pagamento');                $this->Acl->allow($group, 'controllers/Pedidos/obter_endereco');                $this->Acl->allow($group, 'controllers/Pedidos/pagamento');                $this->Acl->allow($group, 'controllers/Pedidos/pedido_concluido');                $this->Acl->allow($group, 'controllers/Pedidos/fazer_pagamento_antigo');                //controles diversos                $this->Acl->allow($group, 'controllers/Eventos/index');                $this->Acl->allow($group, 'controllers/Eventos/view');                $this->Acl->allow($group, 'controllers/Lojas/home');                $this->Acl->allow($group, 'controllers/Lojas/contato');                $this->Acl->allow($group, 'controllers/Lojas/home');	}            function mala_direta_geral(){        $this->set('content_title', 'Visualizar e-mail');        $this->loadModel('EmailHistorico');        $mala_direta = $this->EmailHistorico->find('all', array('conditions' => array('EmailHistorico.tag' => 'mala_direta'),            'recursive' => -1));        $condition = array();        $users = $this->User->find('all', array('conditions' => $condition));        $this->set('mala_diretas', $mala_direta);    }        function mala_direta(){            $this->set('content_title', 'Mala direta');            if (!empty($this->data)) {                                $condition = json_decode($this->data['User']['condition'], true);                $users = $this->User->find('all', array('conditions' => $condition));                $lista_email = array();                foreach($users as $user){                    $lista_email[$user['User']['email']] = $user['User']['email'];                }                                $array_mesclagem = array();                $array_mesclagem['mensagem'] = $this->data['User']['mensagem'];                $array_mesclagem['email'] = $this->config_sistema['Configuracao']['email'];                $mala_direta_id = $this->salvar_email('', $lista_email, $this->data['User']['assunto'] ,'mala_direta', $array_mesclagem, 'mala_direta', null, true);                if($mala_direta_id > 0){                    //encaminhar para a página de visualização do e-mail                    $this->Session->setFlash(__('E-mail salvo', true));                    $this->redirect('/users/mala_direta_view/'.$mala_direta_id);                }else{                    //erro ao salvar                    $this->Session->setFlash(__('Erro ao salvar o e-mail. Tente novamente', true));                    $this->redirect('/users/mala_direta');                }                /*                if($this->envia_email('', $lista_email, $this->data['User']['assunto'] ,'mala_direta', $array_mesclagem, null, null, true)){                    $this->Session->setFlash(__('E-mails enviados', true));                    $this->redirect('/users');                }else{                    $this->Session->setFlash(__('Erro ao enviar os e-mails. Tente novamente', true));                    $this->redirect('/users');                }                */                            }                                    $condition = array();            $param_filtro = array();            $param_get = '?';            if(!empty($_GET)){                    $param_filtro = $_GET;                    if (!empty($_GET['busca'])) {                            $_GET['busca'] = str_replace(' ', '%', $_GET['busca']);                            $condition['OR'] = array(                                    array('User.name LIKE ' => '%'.$_GET['busca'].'%'),                                    array('User.email LIKE ' => '%'.$_GET['busca'].'%')                            );                    }                    if (!empty($_GET['recebe_noticia'])) {                            $condition['User.recebe_noticia'] = 1;                    }                    if (!empty($_GET['tipo_user'])) {                            $condition['User.group_id'] = intval($_GET['tipo_user']);                    }                    foreach($_GET as $key => $value)                        if($key != 'url')                        $param_get .= $key.'='.$value.'&';                    ;            }            $users = $this->User->find('all', array('conditions' => array('User.group_id' => '2', 'User.recebe_noticia' => '1')));            //obter o template do e-mail            $template = $this->config_sistema['Configuracao']['email_cabecalho'];            $template .= $this->config_sistema['Configuracao']['email_assinatura'];            $template .= $this->config_sistema['Configuracao']['email_rodape'];            $this->set('template', $template );            $this->set('param_get', $param_get);            $this->set('condition', $condition);            $this->set('users', $users);        }    function mala_direta_view($mala_direta_id){        $this->set('content_title', 'Visualizar e-mail');        $this->loadModel('EmailHistorico');        $mala_direta = $this->EmailHistorico->read(null, $mala_direta_id);        $condition = array();        $users = $this->User->find('all', array('conditions' => array('User.group_id' => '2', 'User.recebe_noticia' => '1')));        $this->set('mala_direta', $mala_direta);        $this->set('condition', $condition);        $this->set('users', $users);    }    function mala_direta_editar($mala_direta_id){        $this->set('content_title', 'Visualizar e-mail');        $this->loadModel('EmailHistorico');        $mala_direta = $this->EmailHistorico->read(null, $mala_direta_id);        if (!empty($this->data)) {            $this->loadModel('EmailHistorico');            $mala_direta = $this->EmailHistorico->read(null, $mala_direta_id);            $mala_direta['EmailHistorico']['id'] = $this->data['User']['id'];            $mala_direta['EmailHistorico']['corpo'] = $this->data['User']['mensagem'];            $mala_direta['EmailHistorico']['assunto'] = $this->data['User']['assunto'];            $this->EmailHistorico->save($mala_direta);            $this->Session->setFlash(__('E-mail salvo', true));            $this->redirect('/users/mala_direta_view/'.$mala_direta_id);        }        $condition = array();        $users = $this->User->find('all', array('conditions' => array('User.group_id' => '2', 'User.recebe_noticia' => '1')));        $this->set('mala_direta', $mala_direta);        $this->set('condition', $condition);        $this->set('users', $users);    }    function mala_direta_enviar($mala_direta_id){        $users = $this->User->find('all', array('conditions' => array('User.group_id' => '2', 'User.recebe_noticia' => '1')));        $lista_email = array();        foreach($users as $user){            $lista_email[$user['User']['email']] = $user['User']['email'];        }        $this->loadModel('EmailHistorico');        $mala_direta = $this->EmailHistorico->read(null, $mala_direta_id);        $array_mesclagem = array();        $array_mesclagem['mensagem'] = $mala_direta['EmailHistorico']['corpo'];        $array_mesclagem['email'] = $this->config_sistema['Configuracao']['email'];        if($this->envia_email('', $lista_email, $mala_direta['EmailHistorico']['assunto'] ,'mala_direta', $array_mesclagem, 'mala_direta', null, true)){            //gravar no histórco que a mala foi enviada            $mala_direta['EmailHistorico']['enviado'] = 1;            $this->EmailHistorico->save($mala_direta);            $this->Session->setFlash(__('E-mails enviados', true));            $this->redirect('/users');        }else{            $this->Session->setFlash(__('Erro ao enviar os e-mails. Tente novamente', true));            $this->redirect('/users');        }    }                function exportar(){                        $condition = array();            $param_filtro = array();            $param_get = '?';            if(!empty($_GET)){                    $param_filtro = $_GET;                    if (!empty($_GET['busca'])) {                            $_GET['busca'] = str_replace(' ', '%', $_GET['busca']);                            $condition['OR'] = array(                                    array('User.name LIKE ' => '%'.$_GET['busca'].'%'),                                    array('User.email LIKE ' => '%'.$_GET['busca'].'%')                            );                    }                    if (!empty($_GET['recebe_noticia'])) {                            $condition['User.recebe_noticia'] = 1;                    }                    if (!empty($_GET['tipo_user'])) {                            $condition['User.group_id'] = intval($_GET['tipo_user']);                    }                    foreach($_GET as $key => $value)                        if($key != 'url')                        $param_get .= $key.'='.$value.'&';                    ;            }            $users = $this->User->find('all', array('conditions' => $condition));                        //iniciar Excel            $this->Excel->iniciando('lista_usuarios_'.date('d-m-Y_H-i-s').'.xls');            $header = array('Código', 'Nome', 'E-mail', 'CPF', 'Endereço', 'Número', 'Complemento','Bairro', 'CEP', 'Cidade', 'Estado', 'Telefone', 'Data de cadastro');            $this->Excel->writeLine($header);                        $writeLine = array();            foreach($users as $user){                $writeLine = array($user['User']['id'], $user['User']['name'], $user['User']['email'],                     $user['User']['cpf'], $user['User']['endereco'], $user['User']['numero'],                     $user['User']['complemento'], $user['User']['bairro'], $user['User']['cep'],                     $user['Cidade']['nome'], $user['Cidade']['estado_id'], $user['User']['telefone'],                      date('d/m/Y', strtotime($user['User']['created'])));                                $this->Excel->writeLine($writeLine);            }                        //Finalizar Excel            $this->Excel->fechando();        }}?>